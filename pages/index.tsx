import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useQuery, useMutation } from '../convex/_generated/react'
import { useCallback, useState } from 'react'

const Home: NextPage = () => {
  const vote = useMutation('vote');
  const [election, setElection] = useState("Where should we eat lunch?");
  const [candidates, setCandidates] = useState("");
  const electionResults = useQuery('getElectionResults', election);
  const [voter, setVoter] = useState("");
  const topChoices = useQuery('getPopularCandidates', election) ?? [];

  return (
    <div className={styles.container}>
      <Head>
        <title>Next.js with Convex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Let's Vote!
        </h1>
        <p>Enter your name: <input type="text" value={voter} onChange={(e) => {
          setVoter(e.target.value);
        }} />
        </p>

        <p className={styles.description}>
          Vote on "{election}"
        </p>
        {
          electionResults ?
          (<div>
            {electionResults?.firstPastThePostWinner ? <p className={styles.description}>
          Currently {electionResults?.firstPastThePostWinner} is winning via First Past the Post!
          </p> : null}
          {electionResults?.rankedChoiceWinner ? 
          <p  className={styles.description}>
          Currently {electionResults?.rankedChoiceWinner} is winning via Ranked Choice!
          </p> : null}</div>) : null
        }
        <p>Enter your preferences, in order</p>
        <textarea placeholder={`pizza
poke`} value={candidates} onChange={(e) => {
          setCandidates(e.target.value);
        }} />
        <button className={styles.button} onClick={(e) => {
          vote({
            voter,
            election,
            candidates: candidates.split("\n"),
          });
          setCandidates('');
        }}>
          Vote!
        </button>
        <ul>
        {
          topChoices.map(
            ({candidate, firstChoiceCount}) => (
              <li key={candidate}>{candidate}: {firstChoiceCount} {firstChoiceCount === 1 ? "person" : "people"}'s first choice</li>
            )
          )
        }
        </ul>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://www.convex.dev/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/convex.svg" alt="Convex Logo" width={90} height={18} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
